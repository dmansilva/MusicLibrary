import java.util.ArrayList;
import java.util.TreeMap;
import java.util.TreeSet;

import org.json.simple.JSONArray;

public class MusicLibrary {
	
	/*
	 * a class that stores the entire library and has several complex data structures
	 * and its data members
	 * - store each song into the library, (addSong) method, very similar to MusicLibrary.java
	 * in the last homework
	 */
	
	private TreeMap<String, TreeSet<Song>> byArtist;
	private TreeMap<String, TreeSet<Song>> byTitle;
	private TreeMap<String, TreeSet<String>> byTag;
	
	public MusicLibrary () {
		
		this.byArtist = new TreeMap<>();
		this.byTitle = new TreeMap<>();
		this.byTag = new TreeMap<>();
		
		
	}
	
	public void addSong(Song song) {
		
		String artist_check = song.getArtist();
		
		if (!this.byArtist.containsKey(artist_check)) {
			this.byArtist.put(artist_check, new TreeSet<Song>(new ByArtistComparator()));
		}
		
		// if there is already an TreeSet of songs for that artist, it add that song info to the already existing TreeSet
		this.byArtist.get(artist_check).add(song);
		
		String title_check = song.getTitle();
		
		if (!this.byTitle.containsKey(title_check)) {
			this.byTitle.put(title_check, new TreeSet<Song>(new ByTitleComparator()));
		}
		
		this.byTitle.get(title_check).add(song);
		
		// adding Songs by their tag
		
		JSONArray tag = (JSONArray) song.getTags();						// set a new JSONArray tag equal to the JSONArray that you get from getTags method
		ArrayList<String> eachTag = new ArrayList<String>();			// create a new arrayList to put each tag into
		for (int i = 0; i < tag.size(); i++) {							// iterate through outter JSONArray tag
			JSONArray temporary = (JSONArray) tag.get(i);				// set a new JSONArray temporary equal to the JSONArray you get with each iteration
			String temp = (String) temporary.get(0);					// set a new String temp equal to the first element of each JSONArray temporary which will be your tag
			eachTag.add(temp);											// add your tag (called temp) into the arraylist
		}
		
		
		for (int i = 0; i < eachTag.size(); i++) {						// iterate through arrayList that has all the tags for the song you passed into the addSong method
			if (!this.byTag.containsKey(eachTag.get(i))) {				// if treeMap byTag doesn't contain the tag 
				this.byTag.put(eachTag.get(i), new TreeSet<String>());	// put that tag and a new TreeSet of strings into treeMap byTag
				this.byTag.get(eachTag.get(i)).add(song.getTrackId());	// once a treeSet is created for the unique tag then we must go and add the trackId from the song object
			} else { 													// if treeMap byTag does contain the tag already
				this.byTag.get(eachTag.get(i)).add(song.getTrackId());	// get that tag from treeMap byTag and add that trackId variable
			}
		}
		
		
	}
	
	//print by key Ex: Artist, Title, and Tag
	
	//Don't need these methods
	
	public TreeSet<Song> getSongsByArtist(String artist) {
		
		return this.byArtist.get(artist);
	}
	
	public TreeSet<Song> getSongsByTitle(String title) {
		
		return this.byTitle.get(title);
	}
	
	
	public TreeSet<String> getSongsbyTag(String tag) {
		
		return this.byTag.get(tag);
	}

}
